name: Test

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            electron_cmd: win
          - os: ubuntu-latest
            electron_cmd: linux
          - os: macos-latest
            electron_cmd: mac
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: "--max_old_space_size=4096"
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "yarn"

      - name: Register yarn 1.x cache folder
        id: yarn-cache-folder
        shell: bash
        run: |
          echo "path=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Setup yarn 3.x
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
          yarn --version

      - name: Install packages
        env:
          YARN_CACHE_FOLDER: ${{ steps.yarn-cache-folder.outputs.path }}
        run: yarn install --immutable

      - name: Build
        run: yarn build

      - name: Deploy Github Pages
        if: matrix.os == 'ubuntu-latest'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build

      - name: Package the electron app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn electron:package:${{ matrix.electron_cmd }}

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: app_dist_${{ matrix.electron_cmd }}
          path: |
            dist/*.exe
            dist/*.dmg
            dist/*.deb
          if-no-files-found: error

      # this is needed to ensure that actions/setup-node will pick up yarn cache
      - name: Remove yarn 3.5
        run: corepack disable
